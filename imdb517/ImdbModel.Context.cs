//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace imdb517
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class imdbfinalEntities : DbContext
    {
        public imdbfinalEntities()
            : base("name=imdbfinalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<actorMovie> actorMovie { get; set; }
        public virtual DbSet<Movies> Movies { get; set; }
        public virtual DbSet<Producers> Producers { get; set; }
        public virtual DbSet<updatedActors> updatedActors { get; set; }
    
        public virtual ObjectResult<actorMovies_Result> actorMovies(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<actorMovies_Result>("actorMovies", idParameter);
        }
    
        public virtual ObjectResult<string> ActorName(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ActorName", idParameter);
        }
    
        public virtual int addactorandmovie(Nullable<int> movieid, Nullable<int> actorid)
        {
            var movieidParameter = movieid.HasValue ?
                new ObjectParameter("movieid", movieid) :
                new ObjectParameter("movieid", typeof(int));
    
            var actoridParameter = actorid.HasValue ?
                new ObjectParameter("actorid", actorid) :
                new ObjectParameter("actorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addactorandmovie", movieidParameter, actoridParameter);
        }
    
        public virtual int addActors(string actor1, string sex, string dOB, string bio)
        {
            var actor1Parameter = actor1 != null ?
                new ObjectParameter("Actor1", actor1) :
                new ObjectParameter("Actor1", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var bioParameter = bio != null ?
                new ObjectParameter("Bio", bio) :
                new ObjectParameter("Bio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addActors", actor1Parameter, sexParameter, dOBParameter, bioParameter);
        }
    
        public virtual int AddMovies(string moviesName, Nullable<System.DateTime> yearOfRelease, string plot, Nullable<int> producerid, string image)
        {
            var moviesNameParameter = moviesName != null ?
                new ObjectParameter("MoviesName", moviesName) :
                new ObjectParameter("MoviesName", typeof(string));
    
            var yearOfReleaseParameter = yearOfRelease.HasValue ?
                new ObjectParameter("YearOfRelease", yearOfRelease) :
                new ObjectParameter("YearOfRelease", typeof(System.DateTime));
    
            var plotParameter = plot != null ?
                new ObjectParameter("Plot", plot) :
                new ObjectParameter("Plot", typeof(string));
    
            var produceridParameter = producerid.HasValue ?
                new ObjectParameter("producerid", producerid) :
                new ObjectParameter("producerid", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMovies", moviesNameParameter, yearOfReleaseParameter, plotParameter, produceridParameter, imageParameter);
        }
    
        public virtual int addnewmovies(string moviesName, string yearOfRelease, string plot, Nullable<int> producerid, string imageUrl)
        {
            var moviesNameParameter = moviesName != null ?
                new ObjectParameter("MoviesName", moviesName) :
                new ObjectParameter("MoviesName", typeof(string));
    
            var yearOfReleaseParameter = yearOfRelease != null ?
                new ObjectParameter("YearOfRelease", yearOfRelease) :
                new ObjectParameter("YearOfRelease", typeof(string));
    
            var plotParameter = plot != null ?
                new ObjectParameter("Plot", plot) :
                new ObjectParameter("Plot", typeof(string));
    
            var produceridParameter = producerid.HasValue ?
                new ObjectParameter("producerid", producerid) :
                new ObjectParameter("producerid", typeof(int));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("imageUrl", imageUrl) :
                new ObjectParameter("imageUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addnewmovies", moviesNameParameter, yearOfReleaseParameter, plotParameter, produceridParameter, imageUrlParameter);
        }
    
        public virtual int addProducers(string producersName, string sex, string dOB, string bio)
        {
            var producersNameParameter = producersName != null ?
                new ObjectParameter("ProducersName", producersName) :
                new ObjectParameter("ProducersName", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var bioParameter = bio != null ?
                new ObjectParameter("Bio", bio) :
                new ObjectParameter("Bio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addProducers", producersNameParameter, sexParameter, dOBParameter, bioParameter);
        }
    
        public virtual ObjectResult<allmovieswithImage_Result> allmovieswithImage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<allmovieswithImage_Result>("allmovieswithImage");
        }
    
        public virtual int deleteMovies(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteMovies", idParameter);
        }
    
        public virtual int editActorInMovie(Nullable<int> actorid, Nullable<int> id)
        {
            var actoridParameter = actorid.HasValue ?
                new ObjectParameter("actorid", actorid) :
                new ObjectParameter("actorid", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editActorInMovie", actoridParameter, idParameter);
        }
    
        public virtual int editMovies(Nullable<int> id, string moviesName, string yearOfRelease, string plot, Nullable<int> producersName, string image)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var moviesNameParameter = moviesName != null ?
                new ObjectParameter("MoviesName", moviesName) :
                new ObjectParameter("MoviesName", typeof(string));
    
            var yearOfReleaseParameter = yearOfRelease != null ?
                new ObjectParameter("YearOfRelease", yearOfRelease) :
                new ObjectParameter("YearOfRelease", typeof(string));
    
            var plotParameter = plot != null ?
                new ObjectParameter("Plot", plot) :
                new ObjectParameter("Plot", typeof(string));
    
            var producersNameParameter = producersName.HasValue ?
                new ObjectParameter("ProducersName", producersName) :
                new ObjectParameter("ProducersName", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editMovies", idParameter, moviesNameParameter, yearOfReleaseParameter, plotParameter, producersNameParameter, imageParameter);
        }
    
        public virtual ObjectResult<moviedetails_Result> moviedetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<moviedetails_Result>("moviedetails", idParameter);
        }
    
        public virtual ObjectResult<prefilledEdit_Result> prefilledEdit(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prefilledEdit_Result>("prefilledEdit", idParameter);
        }
    
        public virtual ObjectResult<string> ProdName(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProdName", idParameter);
        }
    
        public virtual ObjectResult<producerMovies_Result> producerMovies(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<producerMovies_Result>("producerMovies", idParameter);
        }
    
        public virtual ObjectResult<ProducerNames_Result> ProducerNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProducerNames_Result>("ProducerNames");
        }
    
        public virtual ObjectResult<Nullable<int>> totalActors(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("totalActors", idParameter);
        }
    
        public virtual ObjectResult<viewAllActors_Result> viewAllActors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewAllActors_Result>("viewAllActors");
        }
    
        public virtual ObjectResult<viewAllMovies_Result> viewAllMovies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewAllMovies_Result>("viewAllMovies");
        }
    
        public virtual ObjectResult<viewAllProducers_Result> viewAllProducers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewAllProducers_Result>("viewAllProducers");
        }
    
        public virtual ObjectResult<viewMoviebyActor_Result> viewMoviebyActor(string actorName)
        {
            var actorNameParameter = actorName != null ?
                new ObjectParameter("ActorName", actorName) :
                new ObjectParameter("ActorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewMoviebyActor_Result>("viewMoviebyActor", actorNameParameter);
        }
    
        public virtual ObjectResult<viewMoviebyProducer_Result> viewMoviebyProducer(string producerName)
        {
            var producerNameParameter = producerName != null ?
                new ObjectParameter("ProducerName", producerName) :
                new ObjectParameter("ProducerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewMoviebyProducer_Result>("viewMoviebyProducer", producerNameParameter);
        }
    }
}
