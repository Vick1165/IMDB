@model imdb517.Models.multi

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

@using (Html.BeginForm())
{
    <head>
       
        <style>
            .modal-header, h4, .close {
                background-color: black;
                color: white !important;
                text-align: center;
                font-size: 25px;
            }

            .modal-footer {
                background-color: #f9f9f9;
            }
            .alert {
                display: none;
            }
        </style>
    </head>
    //Entities db = new Entities();
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal ">

        <h2>    Add Movies     </h2>
        <div class="container py-5">


            <div class="alert alert-success">
                <strong>Success!</strong> Movie has been added successfully.
            </div>


        </div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MoviesName, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoviesName, new { htmlAttributes = new { @class = "form-control", id = "username", type = "text" } })
                @Html.ValidationMessageFor(model => model.MoviesName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearOfRelease, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearOfRelease, new { htmlAttributes = new { @class = "form-control", type = "date", id = "YearOfRelease" } })
                @Html.ValidationMessageFor(model => model.YearOfRelease, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Plot, new { htmlAttributes = new { @class = "form-control", id = "Plot" } })
                @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.producerid, "Producer", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                <div id="drop">




                    @*@if (ViewBag.check = new SelectList(db.Producers, "Id", "ProducersName").Count().ToString() != "0")
                    {


                    }*@
                    @Html.DropDownList("producerid", null, htmlAttributes: new { @class = "form-control required" })
                    <span><button style="margin:2px" type="button" class="btn btn-secondary" id="myBtn">Add New Producer</button></span>
                    @Html.ValidationMessageFor(model => model.producerid, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-groupr">

            <!-- Trigger the modal with a button -->
            @*<div style="text-align:right">
                <a href="#" id="myBtn ">Login</a>

            </div>*@

            <!-- Modal -->
            <div class="modal fade" id="myModal" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header" style="padding:35px 50px;">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4> Producer Details</h4>
                        </div>
                        <div class="modal-body" style="padding:40px 50px;">
                            <div class="form-horizontal">

                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProducersName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ProducersName, "ProducersName", new { htmlAttributes = new { @class = "form-control" } })

                                        @Html.ValidationMessageFor(model => model.ProducersName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("Sex", new List<SelectListItem>
                                   {
                                    new SelectListItem{ Text="Male", Value = "1" },
                                    new SelectListItem{ Text="Female", Value = "2" },
                                    new SelectListItem{ Text="Others", Value = "3" } }, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DOB, "DOB", new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Bio, "Bio", new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            </div>


                            <button type="button" class="btn btn-primary btn-block " id="popsubmit" data-dismiss="modal"><span class=""></span> Submit</button>

                        </div>

                    </div>

                </div>
            </div>
        </div>
        <div class="form-group" id="dynamicadd">

            @Html.LabelFor(model => model.Actorid, "Actor", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                <div id="dropactor">
                    <div id="newtest" >
                        @Html.DropDownList("Actorid0", null, htmlAttributes: new { @class = "form-control" })
                        @*@if (ViewBag.chcek2 = new SelectList(db.Producers, "Id", "ProducersName").Count().ToString() != "0")
        {


        }*@
                    </div>
                    <div id="addand+">
                        <span>
                            <button style="margin:2px" type="button" class="btn btn-secondary" id="ActBtn">Add New Actor</button>
                            <button style="margin:2px" type="button" class="btn btn-secondary" id="addanotherActor"> + </button>
                        </span>
                        @Html.ValidationMessageFor(model => model.Actorid, "", new { @class = "text-danger" })
                    </div>
                    
                </div>

            </div>
        </div>

        <div class="form-group" id="image">
            @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-groupr">

            <!-- Trigger the modal with a button -->
            @*<div style="text-align:right">
                <a href="#" id="myBtn ">Login</a>

            </div>*@

            <!-- Modal -->
            <div class="modal fade" id="myActor" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header" style="padding:35px 50px;">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h> Actor Details</h>
                        </div>
                        <div class="modal-body" style="padding:40px 50px;">
                            <div class="form-horizontal">

                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Actor1, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Actor1, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Actor1, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Actor1Sex, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("Actor1Sex", new List<SelectListItem>
                                  {
                                   new SelectListItem{ Text="Male", Value = "1" },
                                   new SelectListItem{ Text="Female", Value = "2" },
                                   new SelectListItem{ Text="Others", Value = "3" } }, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Actor1Sex, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Actor1DOB, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Actor1DOB, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                        @Html.ValidationMessageFor(model => model.Actor1DOB, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Actor1Bio, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Actor1Bio, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Actor1Bio, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            </div>


                            <button type="button" class="btn btn-primary btn-block " id="popsubmitActor" data-dismiss="modal"><span class=""></span>Submit</button>



                        </div>

                    </div>

                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit"  value="Create" id="moviesubmit" class="btn btn-primary" />
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            $("#myBtn").click(function () {
                $("#myModal").modal();
            });
        });

        $(document).ready(function () {
            $("#ActBtn").click(function () {
                $("#myActor").modal();
            });
        });

        var cloneCount = 1;
        var newtest = 0;
        $(document).ready(function () {
            
            
            $("#addanotherActor").click(function () {
                if (cloneCount < 4) {
                    var test = "#Actorid" + newtest;
                    newtest++;
                    @* $("#dynamicadd").append('<div class="form-group"> <label class = "control-label col-md-2 required" for= "firstname">Name</label > <div class="col-md-10">  @Html.DropDownList("Actorid", null, htmlAttributes: new { @class = "form-control" })</div> </div> ');*@
                    var $newrow = $('#Actorid0').clone().attr('id', 'Actorid' + cloneCount++).insertAfter(test);;
                }
                   
          
               
            })
        })
        
        //$(document).ready(function () {
        //    //var prodname = document.getElementById('MoviesName').value;
        //    var YearOfRelease = document.getElementById('YearOfRelease').value;
        //    var Plot = document.getElementById('Plot').value;
        //    var prodname = document.getElementById('ProducersName').value;
        //    $('#moviesubmit').click(function () {
        //        alert(prodname);
        //        if (prodname != "" && YearOfRelease != "" && Plot != "") {
        //            $('.alert').show();

        //        }
                    

        //        })
        //    });
            
        //function myFunction() {
        //    var prodname = document.getElementById('ProducersName').value;
        //    var message = document.getElementById('Prodmessage');
            
        //    if (prodname == "") {
        //        alert(prodname);
        //        message.innerHTML = "Feilds cannot be Empty";
        //    }
            
        //}
        $(document).ready(function () {
            $("#popsubmit").prop('disabled', true);
            $("#Bio").keyup(function () {
                if ($(this).val() != '') {
                    $("#popsubmit").prop('disabled', false);
                }
            });
        });

        $(function () {
            $("#popsubmit").click(function () {
                var formData = new FormData();
                formData.append("ProducersName", $("#ProducersName").val());
                formData.append("Sex", $("#Sex").val());
                formData.append("DOB", $("#DOB").val());
                formData.append("Bio", $("#Bio").val());
                var prodname = document.getElementById('ProducersName').value;
                if (prodname != "") {
                    $.ajax({
                        url: "/imdb/addwithprod",
                        type: 'POST',
                        cache: false,
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (data) {
                            //alert(response);
                            
                            var length = $('#producerid > option').length;
                            $("#producerid").append(new Option(data, length,true,true));
                            //$("#producerid").val(data);
                          

                        }
                    });
                }
                else {
                    alert('Fileds cannot be empty')
                }
                

                
               
            });
        });

        $(document).ready(function () {
            $("#popsubmitActor").prop('disabled', true);
            $("#Actor1Bio").keyup(function () {
                if ($(this).val() != '') {
                    $("#popsubmitActor").prop('disabled', false);
                }
            });
        });

        $(function () {
            $("#popsubmitActor").click(function () {
                var formData = new FormData();
                formData.append("Actor1", $("#Actor1").val());
                formData.append("Actor1Sex", $("#Actor1Sex").val());
                formData.append("Actor1DOB", $("#Actor1DOB").val());
                formData.append("Actor1Bio", $("#Actor1Bio").val());
                $.ajax({
                    url: "/imdb/addwithactor",
                    type: 'POST',
                    cache: false,
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (data) {
                        //alert(response);
                        
                        var actorlength = $('#Actorid0 > option').length;
                        $("#Actorid0").append(new Option(data, actorlength));
                      

                    }
                });
            });
        });
    </script>
}



